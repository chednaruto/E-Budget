package rd.ebudget.tools;

import java.sql.ResultSet;

public class EBudgetTools {

    public boolean CheckBalance(int disbursement_category_id, String officeid, double total_budget) {
        boolean ret = false;
        try {
            String query = "SELECT bt.budget_type_id,bt.budget_type_name,bc.budget_category_id,bc.budget_category_name,"
                    + "SUM(CASE WHEN t.tb_source IN('receive_budget','receive_tranfer_budget','receive_change_budget') THEN t.budget_total ELSE 0 END) receive_total,"
                    + "SUM(CASE WHEN t.tb_source IN('tranfer_budget','change_budget','allocate_budget') THEN t.budget_total ELSE 0 END) used_total,dc.disbursement_category_id,dc.disbursement_category_name "
                    + "FROM ( "
                    + " 	select 'receive_budget' as tb_source,"
                    + "    	TIMESTAMP(rb.budget_receive_date,'00:00:00') As transaction_datetime,"
                    + "    	'' AS detail,"
                    + "    	rb.budget_total,"
                    + "	rb.disbursement_category_id "
                    + "    	from e_budget.receive_budget rb "
                    + "    	where rb.officeid = '" + officeid + "' "
                    + "    	UNION "
                    + "    	select 'tranfer_budget' AS tb_source,"
                    + "    	tb.tranfer_budget_datetime AS transaction_datetime,"
                    + "    	of.officename AS detail,"
                    + "    	tb.budget_total,"
                    + "	tb.disbursement_category_id "
                    + "    	from e_budget.tranfer_budget tb "
                    + "    	left join e_budget.office of ON tb.to_officeid = of.officeid "
                    + "    	where tb.from_officeid = '" + officeid + "' "
                    + "    	UNION "
                    + "    	select 'receive_tranfer_budget' AS tb_source,"
                    + "    	tb.tranfer_budget_datetime AS transaction_datetime,"
                    + "    	of.officename as detail,"
                    + "    	tb.budget_total,"
                    + "	tb.disbursement_category_id "
                    + " 	from e_budget.tranfer_budget tb "
                    + "    	left join e_budget.office of ON tb.from_officeid = officeid "
                    + "    	where tb.to_officeid = '" + officeid + "' "
                    + "   	UNION"
                    + "    	select 'change_budget' AS tb_source,"
                    + "    	cb.change_budget_datetime AS transaction_datetime,"
                    + "    	bc.disbursement_category_name AS detail,"
                    + "    	cb.budget_total,"
                    + "     cb.from_disbursement_category_id as disbursement_category_id "
                    + " 	from e_budget.change_budget cb "
                    + "   	LEFT JOIN e_budget.disbursement_category bc On cb.to_disbursement_category_id = disbursement_category_id "
                    + "    	WHERE cb.officeid = '" + officeid + "' "
                    + "     UNION "
                    + "    	select 'receive_change_budget' as tb_source,"
                    + "    	cb.change_budget_datetime as transaction_datetime,"
                    + "    	bc.disbursement_category_name as detail,"
                    + "    	cb.budget_total,"
                    + "	cb.to_disbursement_category_id as disbursement_category_id "
                    + "	from e_budget.change_budget cb "
                    + "    	left join e_budget.disbursement_category bc ON cb.from_disbursement_category_id = bc.disbursement_category_id "
                    + "   	where cb.officeid= '" + officeid + "' "
                    + "    	UNION "
                    + "    	SELECT 'allocate_budget' AS tb_source,ab.allocate_budget_datetime AS transaction_datetime,p.project_name AS detail,"
                    + "    	ab.allocate_budget_total AS  budget_total,disbursement_category_id "
                    + "	FROM e_budget.allocate_budget ab LEFT JOIN e_budget.project p ON ab.project_id = p.project_id "
                    + "     WHERE ab.officeid= '" + officeid + "' "
                    + ") as t  "
                    + "left join e_budget.disbursement_category dc ON t.disbursement_category_id = dc.disbursement_category_id "
                    + "left join e_budget.budget_category bc ON dc.budget_category_id = bc.budget_category_id "
                    + "left join e_budget.budget_type bt ON bc.budget_type_id = bt.budget_type_id "
                    + "WHERE t.disbursement_category_id=" + disbursement_category_id + " "
                    + "group by bt.budget_type_id,bt.budget_type_name,bc.budget_category_id,bc.budget_category_name,dc.disbursement_category_id,dc.disbursement_category_name";
            DB2Manager dbms = new DB2Manager();
            ResultSet rs = dbms.GetDataAsResultSet(query);
            if (rs.next()) {
                double receive_total = rs.getDouble("receive_total");
                double used_total = rs.getDouble("receive_total");
                if (Double.compare((used_total + total_budget), receive_total) == 1) {
                    ret = true;
                } else {
                    ret = false;
                }
            }
            rs.close();
            dbms.closeConnection();
        } catch (Exception ex) {

        }
        return ret;
    }

    public String getProjectStatus(String project_id) {
        String ret = "";
        try {
            DB2Manager dbms = new DB2Manager();
            int purchase_sub_type_id = 0;
            String query = "SELECT * FROM e_budget.project WHERE project_id = '" + project_id + "'";
            ResultSet rs = dbms.GetDataAsResultSet(query);
            if (rs.next()) {
                purchase_sub_type_id = rs.getInt("purchase_sub_type_id");
                String table = "";
                if (purchase_sub_type_id == 1) {
                    table = " e_market_result ";

                } else if (purchase_sub_type_id == 2) {
                    table = "e_bidding_result";
                } else if (purchase_sub_type_id == 3) {
                    table = " selection_method_result ";
                } else if (purchase_sub_type_id == 4) {
                    table = " specific_method_result ";
                }
            }
        } catch (Exception ex) {

        }
        return ret;
    }

    public static void main(String args[]) {
        EBudgetTools eb = new EBudgetTools();
        boolean ret = eb.CheckBalance(6, "00005000", 50000.0);
    }
}
